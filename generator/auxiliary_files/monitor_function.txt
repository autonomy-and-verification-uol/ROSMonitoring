
def shutdownhook():
	global ws_lock
	sys.stderr.write('\nInterrupted\n')
	non_empty_buffers = [top for top in topics_to_reorder if buffers[top] != []]
	while len(non_empty_buffers) > 0:	
		ws_lock.acquire()		
		logEarliestMsg() 	
		ws_lock.release()		
		non_empty_buffers = [top for top in topics_to_reorder if buffers[top] != []]
		
def monitor():
	global pub_error, pub_verdict
	with open(log, 'w') as log_file:
		log_file.write('')
	rospy.init_node('$ID$', anonymous=True, disable_signals=True)
	rospy.on_shutdown(shutdownhook) 
	pub_error = rospy.Publisher(name = '$ID$/monitor_error', data_class = MonitorError, latch = True, queue_size = 1000)
	pub_verdict = rospy.Publisher(name = '$ID$/monitor_verdict', data_class = String, latch = True, queue_size = 1000)
